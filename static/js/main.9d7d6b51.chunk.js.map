{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentIndex","maxIndex","Math","floor","props","images","length","step","this","frameSize","maxTransform","currentTransform","infinite","itemWidth","className","style","width","transform","translate","map","imageUrl","src","alt","renderPrev","type","onClick","setState","prev","renderNext","next","React","Component","App","animationDuration","ReactDOM","render","document","getElementById"],"mappings":"uPAiBMA,E,4MACJC,MAAe,CACbC,aAAc,EACdC,SAAUC,KAAKC,MAAM,EAAKC,MAAMC,OAAOC,OAAS,EAAKF,MAAMG,O,0CAG7D,WACE,MAAmCC,KAAKT,MAAhCC,EAAR,EAAQA,aAER,OAAIA,IAFJ,EAAsBC,SAGb,EAGFD,EAAe,I,kBAGxB,WACE,MAAmCQ,KAAKT,MAAhCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,SAEtB,OAAqB,IAAjBD,EACKC,EAGFD,EAAe,I,uBAGxB,WACE,MAAoCQ,KAAKJ,MAAjCC,EAAR,EAAQA,OAAQI,EAAhB,EAAgBA,UAAWF,EAA3B,EAA2BA,KACrBG,GAAiB,KAAOL,EAAOC,OAASG,GAC1CA,EACEE,GAAqB,IAAMF,EAAaD,KAAKT,MAAMC,aACrDO,EAEJ,MACQ,cAAN,OADEI,EAAmBD,EACAA,EAGFC,EAHnB,Q,wBAMJ,WACE,QAAKH,KAAKJ,MAAMQ,UACPJ,KAAKT,MAAMC,eAAiBQ,KAAKT,MAAME,W,wBAMlD,WACE,QAAKO,KAAKJ,MAAMQ,UACqB,IAA5BJ,KAAKT,MAAMC,e,oBAMtB,WAAU,IAAD,OACP,EAAyCQ,KAAKJ,MAAtCS,EAAR,EAAQA,UAAWJ,EAAnB,EAAmBA,UAAWJ,EAA9B,EAA8BA,OAE9B,OACE,sBACES,UAAU,WACVC,MAAO,CAAEC,MAAM,GAAD,OAAKH,EAAYJ,EAAjB,OAFhB,UAIE,oBACEK,UAAU,iBACVC,MAAO,CAAEE,UAAWT,KAAKU,aAF3B,SAIGb,EAAOc,KAAI,SAAAC,GAAQ,OAClB,oBAAmBN,UAAU,iBAA7B,SACE,qBACEO,IAAKD,EACLE,IAAKF,EACLJ,MAAOH,EACPC,UAAU,mBALLM,QAWZZ,KAAKe,cAEF,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAE1B,aAAc,EAAK2B,UAFpD,kBAOHnB,KAAKoB,cAEF,wBACEJ,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAE1B,aAAc,EAAK6B,UAFpD,yB,GA3FWC,IAAMC,WAwGdjC,ICjHTkC,E,4MACJjC,MAAQ,CACNM,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWG,KAAKT,MAAhBM,OAER,OACE,sBAAKS,UAAU,MAAf,UAEE,+DAEA,cAAC,EAAD,CACET,OAAQA,EACRE,KAAM,EACNE,UAAW,EACXI,UAAW,IACXoB,kBAAmB,IACnBrB,UAAQ,IAGV,gEAEA,cAAC,EAAD,CACEP,OAAQA,EACRE,KAAM,EACNE,UAAW,EACXI,UAAW,IACXoB,kBAAmB,IACnBrB,UAAU,W,GAzCFkB,IAAMC,WAgDTC,ICrDfE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9d7d6b51.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  currentIndex: number,\n  maxIndex: number,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state: State = {\n    currentIndex: 0,\n    maxIndex: Math.floor(this.props.images.length / this.props.step),\n  };\n\n  next() {\n    const { currentIndex, maxIndex } = this.state;\n\n    if (currentIndex === maxIndex) {\n      return 0;\n    }\n\n    return currentIndex + 1;\n  }\n\n  prev() {\n    const { currentIndex, maxIndex } = this.state;\n\n    if (currentIndex === 0) {\n      return maxIndex;\n    }\n\n    return currentIndex - 1;\n  }\n\n  translate() {\n    const { images, frameSize, step } = this.props;\n    const maxTransform = (-100 * (images.length - frameSize))\n      / frameSize;\n    const currentTransform = (-100 / frameSize) * this.state.currentIndex\n      * step;\n\n    if (currentTransform < maxTransform) {\n      return `translateX(${maxTransform}%)`;\n    }\n\n    return `translateX(${currentTransform}%)`;\n  }\n\n  renderNext() {\n    if (!this.props.infinite) {\n      return this.state.currentIndex !== this.state.maxIndex;\n    }\n\n    return true;\n  }\n\n  renderPrev() {\n    if (!this.props.infinite) {\n      return this.state.currentIndex !== 0;\n    }\n\n    return true;\n  }\n\n  render() {\n    const { itemWidth, frameSize, images } = this.props;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${itemWidth * frameSize}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{ transform: this.translate() }}\n        >\n          {images.map(imageUrl => (\n            <li key={imageUrl} className=\"Carousel__item\">\n              <img\n                src={imageUrl}\n                alt={imageUrl}\n                width={itemWidth}\n                className=\"Carousel__img\"\n              />\n            </li>\n          ))}\n        </ul>\n\n        {this.renderPrev()\n          && (\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ currentIndex: this.prev() })}\n            >\n              Prev\n            </button>\n          )}\n        {this.renderNext()\n          && (\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ currentIndex: this.next() })}\n            >\n              Next\n            </button>\n          )}\n\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with infinitive true</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite\n        />\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with infinitive false</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}